# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/test.gni")
import("//foundation/distributeddatamgr/relational_store/relational_store.gni")

module_output_path = "relational_store/native_rdb"

###############################################################################
config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${relational_store_common_path}/include",
    "${relational_store_native_path}/rdb/include",
    "${relational_store_innerapi_path}/rdb/include",
    "${relational_store_native_path}/rdb/src",
    "${relational_store_innerapi_path}/appdatafwk/include",
    "//commonlibrary/c_utils/base/include",
    "${common_tool_path}/",
    "${kvstore_interface_path}",
  ]

  defines = [ "RELATIONAL_STORE" ]

  if (relational_store_rdb_support_icu) {
    include_dirs += [
      "//third_party/icu/icu4c/source/i18n",
      "//third_party/icu/icu4c/source/common",
    ]
  }
}

ohos_unittest("NativeRdbMultiThreadTest") {
  module_out_path = module_output_path

  sources = [
    "unittest/common.cpp",
    "unittest/multiThread/rdb_connection_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "c_utils:utils",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:distributeddb",
  ]

  deps = [
    "${relational_store_innerapi_path}/rdb:native_rdb",
    "//third_party/googletest:gtest_main",
    "//third_party/icu/icu4c:shared_icui18n",
    "//third_party/icu/icu4c:shared_icuuc",
    "//third_party/sqlite:sqlite",
  ]
}

ohos_unittest("NativeRdbTest") {
  module_out_path = module_output_path

  sources = [
    "unittest/cache_result_set_test.cpp",
    "unittest/common.cpp",
    "unittest/rdb_attach_test.cpp",
    "unittest/rdb_bigint_test.cpp",
    "unittest/rdb_delete_test.cpp",
    "unittest/rdb_distributed_test.cpp",
    "unittest/rdb_encrypt_decrypt_test.cpp",
    "unittest/rdb_execute_test.cpp",
    "unittest/rdb_get_store_test.cpp",
    "unittest/rdb_helper_test.cpp",
    "unittest/rdb_insert_test.cpp",
    "unittest/rdb_open_callback_test.cpp",
    "unittest/rdb_predicates_join_b_test.cpp",
    "unittest/rdb_predicates_join_test.cpp",
    "unittest/rdb_predicates_test.cpp",
    "unittest/rdb_sqlite_shared_result_set_test.cpp",
    "unittest/rdb_step_result_get_row_test.cpp",
    "unittest/rdb_step_result_set_test.cpp",
    "unittest/rdb_store_concurrent_test.cpp",
    "unittest/rdb_store_config_test.cpp",
    "unittest/rdb_store_impl_test.cpp",
    "unittest/rdb_store_interface_test.cpp",
    "unittest/rdb_store_rekey_test.cpp",
    "unittest/rdb_store_subscribe_test.cpp",
    "unittest/rdb_transaction_test.cpp",
    "unittest/rdb_update_test.cpp",
    "unittest/rdb_upgrade_test.cpp",
    "unittest/rdb_utils_test.cpp",
    "unittest/rdb_value_bucket_test.cpp",
    "unittest/rdb_wal_limit_test.cpp",
  ]

  sources += [
    "../../../frameworks/native/rdb/src/base_transaction.cpp",
    "../../../frameworks/native/rdb/src/connection.cpp",
    "../../../frameworks/native/rdb/src/raw_data_parser.cpp",
    "../../../frameworks/native/rdb/src/rdb_local_db_observer.cpp",
    "../../../frameworks/native/rdb/src/rdb_security_manager.cpp",
    "../../../frameworks/native/rdb/src/result_set_proxy.cpp",
    "../../../frameworks/native/rdb/src/share_block.cpp",
    "../../../frameworks/native/rdb/src/shared_block_serializer_info.cpp",
    "../../../frameworks/native/rdb/src/sqlite_connection.cpp",
    "../../../frameworks/native/rdb/src/sqlite_connection_pool.cpp",
    "../../../frameworks/native/rdb/src/sqlite_global_config.cpp",
    "../../../frameworks/native/rdb/src/sqlite_shared_result_set.cpp",
    "../../../frameworks/native/rdb/src/sqlite_sql_builder.cpp",
    "../../../frameworks/native/rdb/src/sqlite_statement.cpp",
    "../../../frameworks/native/rdb/src/sqlite_utils.cpp",
    "../../../frameworks/native/rdb/src/string_utils.cpp",
  ]

  configs = [ ":module_private_config" ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "c_utils:utils",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:distributeddb",
  ]

  deps = [
    "${relational_store_innerapi_path}/rdb:native_rdb",
    "//third_party/googletest:gtest_main",
    "//third_party/icu/icu4c:shared_icui18n",
    "//third_party/icu/icu4c:shared_icuuc",
    "//third_party/sqlite:sqlite",
  ]
}

###############################################################################
group("unittest") {
  testonly = true

  deps = [
    ":NativeRdbMultiThreadTest",
    ":NativeRdbTest",
  ]
}

###############################################################################

group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    "fuzztest/rdbimpl_fuzzer:fuzztest",
    "fuzztest/rdbstore_fuzzer:fuzztest",
  ]
}

###############################################################################

group("distributedtest") {
  testonly = true
  deps = []
  deps += [ "distributedtest/rdb_store_impl_test:distributedtest" ]
}
###############################################################################
