# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//build/ohos/ace/ace.gni")
import("//foundation/distributeddatamgr/relational_store/relational_store.gni")

ohos_copy("relational_store_declaration") {
  sources = [ "./api" ]
  outputs = [ target_out_dir + "/$target_name/" ]
  module_source_dir = target_out_dir + "/$target_name"
  module_install_name = ""
}

sources = [
  "../common/src/js_scope.cpp",
  "../common/src/js_utils.cpp",
  "../common/src/js_uv_queue.cpp",
  "src/entry_point.cpp",
  "src/napi_async_call.cpp",
  "src/napi_rdb_const_properties.cpp",
  "src/napi_rdb_error.cpp",
  "src/napi_rdb_js_utils.cpp",
  "src/napi_rdb_predicates.cpp",
  "src/napi_rdb_store.cpp",
  "src/napi_rdb_store_helper.cpp",
  "src/napi_result_set.cpp",
  "src/napi_uv_queue.cpp",
]

if (is_ohos) {
  ohos_shared_library("relationalstore") {
    branch_protector_ret = "pac_ret"
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }

    include_dirs = [
      "include",
      "${datashare_path}/common/include/",
      "${kvstore_path}/common",
      "${relational_store_common_path}/include",
      "${relational_store_js_common_path}/include",
      "${relational_store_napi_path}/relationalstore/include",
    ]

    defines = [ "SQLITE_DISTRIBUTE_RELATIONAL" ]

    sources += [
      "${relational_store_js_common_path}/src/js_ability.cpp",
      "src/napi_rdb_store_observer.cpp",
    ]

    deps = [
      "${relational_store_innerapi_path}/appdatafwk:native_appdatafwk",
      "${relational_store_innerapi_path}/rdb:native_rdb",
      "${relational_store_innerapi_path}/rdb_data_share_adapter:rdb_data_share_adapter",
    ]

    external_deps = [
      "ability_runtime:abilitykit_native",
      "ability_runtime:napi_base_context",
      "c_utils:utils",
      "common_event_service:cesfwk_innerkits",
      "eventhandler:libeventhandler",
      "hilog:libhilog",
      "hitrace:hitrace_meter",
      "napi:ace_napi",
    ]

    subsystem_name = "distributeddatamgr"
    part_name = "relational_store"
    relative_install_dir = "module/data"
  }
} else if (is_mingw) {
  ohos_shared_library("relationalstore") {
    include_dirs = [
      "mock/include",
      "${kvstore_path}/common",
      "${relational_store_common_path}/include",
      "${relational_store_js_common_path}/mock/include",
      "${relational_store_napi_path}/relationalstore/mock/include",
      "//commonlibrary/c_utils/base/include",
      "include",
      "${relational_store_js_common_path}/include",
    ]
    cflags_cc = [
      "-std=c++17",
      "-stdlib=libc++",
    ]

    buildos = "windows"
    defines = [
      "WINDOWS_PLATFORM",
      "API_EXPORT=__declspec(dllimport)",
    ]

    sources += [ "${relational_store_js_common_path}/mock/src/js_ability.cpp" ]

    deps = [
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_${buildos}",
      "//foundation/arkui/napi:ace_napi",
      "//foundation/distributeddatamgr/relational_store/interfaces/inner_api/rdb:native_rdb",
    ]

    subsystem_name = "distributeddatamgr"
    part_name = "relational_store"
    relative_install_dir = "module/data"
  }
} else if (is_mac) {
  ohos_shared_library("relationalstore") {
    include_dirs = [
      "mock/include",
      "${kvstore_path}/common",
      "${relational_store_common_path}/include",
      "${relational_store_js_common_path}/mock/include",
      "${relational_store_napi_path}/relationalstore/mock/include",
      "//commonlibrary/c_utils/base/include",
      "include",
      "${relational_store_js_common_path}/include",
    ]

    cflags_cc = [
      "-std=c++17",
      "-stdlib=libc++",
    ]

    buildos = "mac"
    defines = [ "MAC_PLATFORM" ]

    sources += [ "${relational_store_js_common_path}/mock/src/js_ability.cpp" ]

    deps = [
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_${buildos}",
      "//foundation/arkui/napi:ace_napi",
      "//foundation/distributeddatamgr/relational_store/interfaces/inner_api/rdb:native_rdb",
    ]

    subsystem_name = "distributeddatamgr"
    part_name = "relational_store"
    relative_install_dir = "module/data"
  }
} else if (is_android) {
  ohos_source_set("data_relationalstore") {
    include_dirs = [
      "mock/include",
      "${kvstore_path}/common",
      "${relational_store_common_path}/include",
      "${relational_store_js_common_path}/mock/include",
      "include",
      "${relational_store_js_common_path}/include",
      "//base/global/resource_management/interfaces/inner_api/include",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/napi_base_context/include",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/bundle",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/configuration",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/kits/native/appkit",
    ]

    cflags_cc = [
      "-std=c++17",
      "-stdlib=libc++",
    ]

    defines = [ "ANDROID_PLATFORM" ]

    sources += [
      "${relational_store_js_common_path}/mock/src/js_ability.cpp",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/napi_base_context/src/napi_base_context.cpp",
    ]

    deps = [
      "${relational_store_innerapi_path}/rdb:native_rdb",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_android",
      "//foundation/arkui/ace_engine/adapter/android/build:libarkui_android",
    ]

    subsystem_name = "distributeddatamgr"
    part_name = "relational_store"
  }
} else if (is_ios) {
  ohos_source_set("data_relationalstore") {
    include_dirs = [
      "mock/include",
      "${kvstore_path}/common",
      "${relational_store_common_path}/include",
      "${relational_store_js_common_path}/mock/include",
      "include",
      "${relational_store_js_common_path}/include",
      "//base/global/resource_management/interfaces/inner_api/include",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/napi_base_context/include",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/bundle",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/configuration",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/kits/native/appkit",
    ]

    cflags_cc = [
      "-std=c++17",
      "-stdlib=libc++",
    ]

    defines = [ "IOS_PLATFORM" ]

    sources += [ "${relational_store_js_common_path}/mock/src/js_ability.cpp" ]

    deps = [
      "${relational_store_innerapi_path}/rdb:native_rdb",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_ios",
      "//plugins/libs/napi:napi_ios",
    ]

    subsystem_name = "distributeddatamgr"
    part_name = "relational_store"
  }
}
