# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/distributeddatamgr/relational_store/relational_store.gni")

config("native_gdb_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${relational_store_innerapi_path}/gdb/include",
    "${relational_store_innerapi_path}/rdb/include",
  ]
}

ohos_shared_library("native_graphstore") {
  public_configs = [ ":native_gdb_public_config" ]
  sanitize = {
    boundary_sanitize = true
    ubsan = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  cflags_cc = [ "-fvisibility=hidden" ]
  include_dirs = [
    "${relational_store_common_path}/include",
    "${relational_store_native_path}/gdb/adapter/include",
    "${relational_store_native_path}/gdb/include",
    "${relational_store_native_path}/rdb/include",
    "${relational_store_native_path}/rdb_crypt",
  ]
  sources = [
    "${relational_store_native_path}/gdb/adapter/src/grd_adapter.cpp",
    "${relational_store_native_path}/gdb/adapter/src/grd_adapter_manager.cpp",
    "${relational_store_native_path}/gdb/src/connection.cpp",
    "${relational_store_native_path}/gdb/src/connection_pool.cpp",
    "${relational_store_native_path}/gdb/src/db_helper.cpp",
    "${relational_store_native_path}/gdb/src/db_store_impl.cpp",
    "${relational_store_native_path}/gdb/src/db_store_manager.cpp",
    "${relational_store_native_path}/gdb/src/edge.cpp",
    "${relational_store_native_path}/gdb/src/full_result.cpp",
    "${relational_store_native_path}/gdb/src/gdb_utils.cpp",
    "${relational_store_native_path}/gdb/src/graph_connection.cpp",
    "${relational_store_native_path}/gdb/src/graph_statement.cpp",
    "${relational_store_native_path}/gdb/src/path.cpp",
    "${relational_store_native_path}/gdb/src/path_segment.cpp",
    "${relational_store_native_path}/gdb/src/store_config.cpp",
    "${relational_store_native_path}/gdb/src/trans_db.cpp",
    "${relational_store_native_path}/gdb/src/transaction.cpp",
    "${relational_store_native_path}/gdb/src/transaction_impl.cpp",
    "${relational_store_native_path}/gdb/src/vertex.cpp",
    "${relational_store_native_path}/rdb/src/rdb_security_manager.cpp",
    "${relational_store_native_path}/rdb/src/rdb_store_config.cpp",
    "${relational_store_native_path}/rdb/src/rdb_time_utils.cpp",
    "${relational_store_native_path}/rdb/src/sqlite_utils.cpp",
    "${relational_store_native_path}/rdb/src/string_utils.cpp",
  ]
  deps = []
  external_deps = [
    "c_utils:utils",
    "file_api:securitylabel",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "json:nlohmann_json_static",
  ]
  if (arkdata_db_core_is_exists) {
    defines = [ "ARKDATA_DB_CORE_IS_EXISTS" ]
  }
  subsystem_name = "distributeddatamgr"
  part_name = "relational_store"
}
